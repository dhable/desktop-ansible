- name: Checking for homebrew
  ansible.builtin.stat:
    path: /usr/local/bin/brew
  register: brew

- name: Installing homebrew
  ansible.builtin.shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  when: not brew.stat.exists

- name: Install zsh
  community.general.homebrew:
    name: zsh
    state: latest
    update_homebrew: true

- name: Checking for prior oh-my-zsh installs
  ansible.builtin.stat:
    path: ~/.oh-my-zsh
  register: omz

- name: Install oh-my-zsh
  ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  when: not omz.stat.exists

- name: Configure shell
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^ZSH_THEME=', line: 'ZSH_THEME="agnoster"' }
    - { regexp: '^DISABLE_UPDATE_PROMPT=', line: 'DISABLE_UPDATE_PROMPT="true"' }
    - { regexp: '^COMPLETION_WAITING_DOTS=', line: 'COMPLETION_WAITING_DOTS="true"' }
    - { regexp: '^plugins=', line: 'plugins=(git cargo fzf gh node zsh_reload)' }
    - { regexp: '^bindkey', line: 'bindkey -v' }
    - { regexp: '^ulimit', line: 'ulimit -S -n 4096' }
